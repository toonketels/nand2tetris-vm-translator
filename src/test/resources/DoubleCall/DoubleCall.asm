// push constant 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
// call DoubleCall.add 2
@null$ret_2
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@DoubleCall.add
0; JMP
(null$ret_2)
// push constant 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
// call DoubleCall.add 2
@null$ret_4
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@DoubleCall.add
0; JMP
(null$ret_4)
// label FOREVER
(null$FOREVER)
// goto FOREVER
@null$FOREVER
0; JMP
// function DoubleCall.add 0
(DoubleCall.add)
// push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
// push argument 1
@1
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
// add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
M=M+D
@SP
M=M+1
// return
@LCL
D=M
@5
M=D
@5
D=A
@5
A=M-D
D=M
@6
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@1
D=A
@ARG
D=M+D
@SP
M=D
@1
D=A
@5
A=M-D
D=M
@THAT
M=D
@2
D=A
@5
A=M-D
D=M
@THIS
M=D
@3
D=A
@5
A=M-D
D=M
@ARG
M=D
@4
D=A
@5
A=M-D
D=M
@LCL
M=D
@6
A=M
0; JMP
